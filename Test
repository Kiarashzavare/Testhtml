<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ربات تلگرام با کیبورد سفارشی</title>
    <style>
        body {
            font-family: 'Tahoma', sans-serif;
            background-color: #f0f2f5;
            margin: 0;
            padding: 20px;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .bot-controls {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        
        .input-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        
        input, button {
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
        }
        
        button {
            background-color: #0088cc;
            color: white;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s;
            font-weight: bold;
        }
        
        button:hover {
            background-color: #006699;
        }
        
        .status {
            margin-top: 20px;
            padding: 12px;
            border-radius: 8px;
        }
        
        .online {
            background-color: #d4edda;
            color: #155724;
        }
        
        .offline {
            background-color: #f8d7da;
            color: #721c24;
        }

        .log-container {
            margin-top: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 8px;
            max-height: 300px;
            overflow-y: auto;
        }

        .log-entry {
            margin-bottom: 8px;
            padding: 8px;
            border-radius: 4px;
            background-color: #fff;
        }

        .keyboard-preview {
            margin-top: 20px;
            padding: 15px;
            background-color: #e9ecef;
            border-radius: 8px;
        }

        .keyboard-row {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }

        .keyboard-button {
            padding: 10px 20px;
            background-color: white;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>ربات تلگرام با کیبورد سفارشی</h1>
        
        <div class="bot-controls">
            <div class="input-group">
                <label for="token">توکن ربات:</label>
                <input type="text" id="token" placeholder="توکن ربات را وارد کنید">
            </div>
            
            <button onclick="startBot()">راه‌اندازی ربات</button>
            <button onclick="stopBot()">توقف ربات</button>
        </div>
        
        <div id="status" class="status offline">
            وضعیت: آفلاین
        </div>

        <div class="keyboard-preview">
            <h3>پیش‌نمایش کیبورد</h3>
            <div class="keyboard-row">
                <div class="keyboard-button">منو اصلی 📱</div>
                <div class="keyboard-button">درباره ما ℹ️</div>
            </div>
            <div class="keyboard-row">
                <div class="keyboard-button">تماس با ما 📞</div>
                <div class="keyboard-button">راهنما 📚</div>
            </div>
            <div class="keyboard-row">
                <div class="keyboard-button">محصولات 🛍</div>
                <div class="keyboard-button">قیمت‌ها 💰</div>
            </div>
        </div>

        <div class="log-container" id="logContainer">
            <div>گزارش‌های ربات اینجا نمایش داده می‌شود...</div>
        </div>
    </div>

    <script>
        let botToken = '';
        let isRunning = false;
        let polling = null;

        // تنظیمات کیبورد اصلی
        const mainKeyboard = {
            keyboard: [
                [{ text: "منو اصلی 📱" }, { text: "درباره ما ℹ️" }],
                [{ text: "تماس با ما 📞" }, { text: "راهنما 📚" }],
                [{ text: "محصولات 🛍" }, { text: "قیمت‌ها 💰" }]
            ],
            resize_keyboard: true,
            one_time_keyboard: false
        };

        // تنظیمات کیبورد محصولات
        const productsKeyboard = {
            keyboard: [
                [{ text: "محصول ۱ 📱" }, { text: "محصول ۲ 💻" }],
                [{ text: "محصول ۳ 🖥" }, { text: "محصول ۴ 🎮" }],
                [{ text: "بازگشت به منو اصلی 🔙" }]
            ],
            resize_keyboard: true,
            one_time_keyboard: false
        };

        // پاسخ‌های ربات
        const responses = {
            'منو اصلی 📱': 'به منو اصلی خوش آمدید! لطفاً یکی از گزینه‌ها را انتخاب کنید.',
            'درباره ما ℹ️': 'ما یک تیم متخصص در زمینه توسعه نرم‌افزار هستیم.',
            'تماس با ما 📞': 'شما می‌توانید از طریق ایمیل info@example.com با ما در تماس باشید.',
            'راهنما 📚': 'برای استفاده از ربات، کافیست از دکمه‌های کیبورد استفاده کنید.',
            'محصولات 🛍': {
                text: 'لطفاً محصول مورد نظر خود را انتخاب کنید:',
                keyboard: productsKeyboard
            },
            'قیمت‌ها 💰': 'لیست قیمت محصولات:\n\nمحصول ۱: 100,000 تومان\nمحصول ۲: 200,000 تومان\nمحصول ۳: 300,000 تومان\nمحصول ۴: 400,000 تومان',
            'محصول ۱ 📱': 'محصول ۱: گوشی هوشمند با امکانات پیشرفته',
            'محصول ۲ 💻': 'محصول ۲: لپ‌تاپ قدرتمند برای کارهای حرفه‌ای',
            'محصول ۳ 🖥': 'محصول ۳: کامپیوتر رومیزی برای گیمینگ',
            'محصول ۴ 🎮': 'محصول ۴: کنسول بازی نسل جدید',
            'بازگشت به منو اصلی 🔙': {
                text: 'به منو اصلی بازگشتید.',
                keyboard: mainKeyboard
            }
        };

        // پیام پیش‌فرض
        const defaultResponse = {
            text: 'متوجه نشدم. لطفاً از کیبورد زیر استفاده کنید:',
            keyboard: mainKeyboard
        };

        function addLog(message) {
            const logContainer = document.getElementById('logContainer');
            const logEntry = document.createElement('div');
            logEntry.className = 'log-entry';
            logEntry.textContent = message;
            logContainer.insertBefore(logEntry, logContainer.firstChild);
        }

        function startBot() {
            botToken = document.getElementById('token').value;
            
            if (!botToken) {
                alert('لطفا توکن ربات را وارد کنید');
                return;
            }
            
            isRunning = true;
            updateStatus(true);
            startPolling();
            addLog('ربات شروع به کار کرد');
        }
        
        function stopBot() {
            isRunning = false;
            if (polling) {
                clearInterval(polling);
            }
            updateStatus(false);
            addLog('ربات متوقف شد');
        }
        
        function updateStatus(online) {
            const status = document.getElementById('status');
            status.className = `status ${online ? 'online' : 'offline'}`;
            status.textContent = `وضعیت: ${online ? 'آنلاین' : 'آفلاین'}`;
        }
        
        async function handleMessage(chatId, messageText) {
            let response;

            // اگر پیام "/start" بود
            if (messageText === '/start') {
                response = {
                    text: 'سلام! به ربات ما خوش آمدید. لطفاً از کیبورد زیر استفاده کنید:',
                    keyboard: mainKeyboard
                };
            } else {
                // بررسی پاسخ‌های تعریف شده
                response = responses[messageText] || defaultResponse;
            }

            // ارسال پاسخ
            if (typeof response === 'string') {
                await sendMessage(chatId, response, mainKeyboard);
            } else {
                await sendMessage(chatId, response.text, response.keyboard || mainKeyboard);
            }
        }
        
        function startPolling() {
            let offset = 0;
            
            polling = setInterval(async () => {
                if (!isRunning) return;
                
                try {
                    const response = await fetch(`https://api.telegram.org/bot${botToken}/getUpdates?offset=${offset}&timeout=30`);
                    const data = await response.json();
                    
                    if (data.ok) {
                        const updates = data.result;
                        
                        for (const update of updates) {
                            offset = update.update_id + 1;
                            
                            if (update.message && update.message.text) {
                                const chatId = update.message.chat.id;
                                const messageText = update.message.text;
                                
                                addLog(`دریافت پیام: ${messageText}`);
                                await handleMessage(chatId, messageText);
                            }
                        }
                    } else {
                        console.error('خطا در دریافت آپدیت‌ها:', data.description);
                        addLog(`خطا: ${data.description}`);
                    }
                } catch (error) {
                    console.error('خطا در ارتباط با API تلگرام:', error);
                    addLog(`خطای ارتباط: ${error.message}`);
                }
            }, 1000);
        }
        
        async function sendMessage(chatId, text, keyboard = null) {
            try {
                const messageData = {
                    chat_id: chatId,
                    text: text
                };

                if (keyboard) {
                    messageData.reply_markup = keyboard;
                }

                const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(messageData)
                });
                
                const data = await response.json();
                if (!data.ok) {
                    console.error('خطا در ارسال پیام:', data.description);
                    addLog(`خطا در ارسال پیام: ${data.description}`);
                } else {
                    addLog(`ارسال پیام: ${text}`);
                }
            } catch (error) {
                console.error('خطا در ارسال پیام:', error);
                addLog(`خطا در ارسال پیام: ${error.message}`);
            }
        }
    </script>
</body>
</html>
